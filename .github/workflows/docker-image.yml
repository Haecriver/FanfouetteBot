# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

jobs:
  checkAndBuild:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Setup node
      uses: actions/setup-node@v2
      with:
        node-version: 12.x

    - name: setup yarn
      run: yarn

    - name: linter
      run: yarn lint
 
    - name: build ts files
      run: yarn build
      
    - name: Archive builded js
      uses: actions/upload-artifact@v2
      with:
        name: dist
        path: dist
        retention-days: 1
          
  dockerize:
    runs-on: ubuntu-latest
    needs: checkAndBuild
    env:
      IMAGE_NAME: fanfouette-bot
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}  
      DOCKER_TARGET_PLATFORM: linux/arm/v7

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      
    - name: Get lite node_modules
      run: yarn --prod

    - name: Download builded app
      uses: actions/download-artifact@v2
      with:
        name: dist
        path: dist
      
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Prepare env
      run: |
          IMAGE_ID=${{ secrets.DOCKERHUB_USERNAME }}/$IMAGE_NAME
    
          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          
          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest
          
    - name: Run Buildx & Push image
      if: success()      
      run: |        
        docker buildx build \        
        --platform $DOCKER_TARGET_PLATFORM \             
        --tag $IMAGE_NAME $IMAGE_ID:$VERSION \        
        --file ./Dockerfile \        
        --output type=image,push=true .
